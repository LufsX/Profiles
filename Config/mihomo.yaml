# port: 7890 # HTTP(S) 代理服务器端口
# socks-port: 7891 # SOCKS5 代理端口
mixed-port: 7767 # HTTP(S) 和 SOCKS 代理混合端口
# redir-port: 7892 # 透明代理端口，用于 Linux 和 MacOS

# Transparent proxy server port for Linux (TProxy TCP and TProxy UDP)
tproxy-port: 1536

allow-lan: true # 允许局域网连接
bind-address: "*" # 绑定 IP 地址，仅作用于 allow-lan 为 true，'*'表示所有地址
# authentication: # http,socks 入口的验证用户名，密码
#   - "username:password"
# skip-auth-prefixes: # 设置跳过验证的 IP 段
#   - 127.0.0.1/8
#   - ::1/128
# lan-allowed-ips: # 允许连接的 IP 地址段，仅作用于 allow-lan 为 true, 默认值为 0.0.0.0/0 和::/0
#   - 0.0.0.0/0
#   - ::/0
# lan-disallowed-ips: # 禁止连接的 IP 地址段，黑名单优先级高于白名单，默认值为空
#   - 192.168.0.3/32

#  find-process-mode has 3 values:always, strict, off
#  - always, 开启，强制匹配所有进程
#  - strict, 默认，由 mihomo 判断是否开启
#  - off, 不匹配进程，推荐在路由器上使用此模式
find-process-mode: strict

mode: rule

#自定义 geodata url
geox-url:
  geoip: "https://cors.isteed.cc/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip-lite.dat"
  geosite: "https://cors.isteed.cc/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geosite.dat"
  mmdb: "https://cors.isteed.cc/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/country-lite.mmdb"
  asn: "https://cors.isteed.cc/https://github.com/xishang0128/geoip/releases/download/latest/GeoLite2-ASN.mmdb"

geo-auto-update: false # 是否自动更新 geodata
geo-update-interval: 72 # 更新间隔，单位：小时

# Matcher implementation used by GeoSite, available implementations:
# - succinct (default, same as rule-set)
# - mph (from V2Ray, also `hybrid` in Xray)
# geosite-matcher: succinct

log-level: info # 日志等级 silent/error/warning/info/debug

ipv6: true # 开启 IPv6 总开关，关闭阻断所有 IPv6 链接和屏蔽 DNS 请求 AAAA 记录
# UDP 支持
udp: true

# tls:
#   certificate: string # 证书 PEM 格式，或者 证书的路径
#   private-key: string # 证书对应的私钥 PEM 格式，或者私钥路径
#   custom-certifactes:
#     - |
#       -----BEGIN CERTIFICATE-----
#       format/pem...
#       -----END CERTIFICATE-----

external-controller: 127.0.0.1:9090 # RESTful API 监听地址
# external-controller-tls: 0.0.0.0:9443 # RESTful API HTTPS 监听地址，需要配置 tls 部分配置文件
# secret: "123456" # `Authorization:Bearer ${secret}`

# RESTful API CORS标头配置
# external-controller-cors:
#   allow-origins:
#     - "*"
#   allow-private-network: true

# RESTful API Unix socket 监听地址（ windows版本大于17063也可以使用，即大于等于1803/RS4版本即可使用 ）
# ！！！注意： 从Unix socket访问api接口不会验证secret， 如果开启请自行保证安全问题 ！！！
# 测试方法： curl -v --unix-socket "mihomo.sock" http://localhost/
# external-controller-unix: mihomo.sock

# RESTful API Windows namedpipe 监听地址
# ！！！注意： 从Windows namedpipe访问api接口不会验证secret， 如果开启请自行保证安全问题 ！！！
# external-controller-pipe: \\.\pipe\mihomo

tcp-concurrent: true # TCP 并发连接所有 IP, 将使用最快握手的 TCP

# 配置 WEB UI 目录，使用 http://{{external-controller}}/ui 访问
external-ui: ui
# external-ui-name: xd
# 目前支持下载zip,tgz格式的压缩包
external-ui-url: "https://cors.isteed.cc/https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip"

# 在RESTful API端口上开启DOH服务器
# ！！！该URL不会验证secret， 如果开启请自行保证安全问题 ！！！
# external-doh-server: /dns-query

# interface-name: en0 # 设置出口网卡

# 全局 TLS 指纹，优先低于 proxy 内的 client-fingerprint
# 可选： "chrome","firefox","safari","ios","random","none" options.
# Utls is currently support TLS transport in TCP/grpc/WS/HTTP for VLESS/Vmess and trojan.
global-client-fingerprint: edge
# 统一延迟
unified-delay: true
# TCP 并发连接
tcp-concurrent: true


profile: # 存储 select 选择记录
  store-selected: true
  # 持久化 fake-ip
  store-fake-ip: true

# Tun 配置
tun:
  enable: true
  stack: system # gvisor/mixed
  dns-hijack:
    - any:53 # 需要劫持的 DNS
  auto-detect-interface: true # 自动识别出口网卡
  auto-route: true # 配置路由表
  # mtu: 9000 # 最大传输单元
  # gso: false # 启用通用分段卸载，仅支持 Linux
  # gso-max-size: 65536 # 通用分段卸载包的最大大小
  # auto-redirect: false # 自动配置 iptables 以重定向 TCP 连接。仅支持 Linux。带有 auto-redirect 的 auto-route 现在可以在路由器上按预期工作，无需干预。
  # strict-route: true # 将所有连接路由到 tun 来防止泄漏，但你的设备将无法其他设备被访问
  # route-address-set: # 将指定规则集中的目标 IP CIDR 规则添加到防火墙, 不匹配的流量将绕过路由, 仅支持 Linux，且需要 nftables，`auto-route` 和 `auto-redirect` 已启用。
  #   - ruleset-1
  #   - ruleset-2
  # route-exclude-address-set: # 将指定规则集中的目标 IP CIDR 规则添加到防火墙, 匹配的流量将绕过路由, 仅支持 Linux，且需要 nftables，`auto-route` 和 `auto-redirect` 已启用。
  #   - ruleset-3
  #   - ruleset-4
  # route-address: # 启用 auto-route 时使用自定义路由而不是默认路由
  #   - 0.0.0.0/1
  #   - 128.0.0.0/1
  #   - "::/1"
  #   - "8000::/1"
  # inet4-route-address: # 启用 auto-route 时使用自定义路由而不是默认路由（旧写法）
  #   - 0.0.0.0/1
  #   - 128.0.0.0/1
  # inet6-route-address: # 启用 auto-route 时使用自定义路由而不是默认路由（旧写法）
  #   - "::/1"
  #   - "8000::/1"
  # endpoint-independent-nat: false # 启用独立于端点的 NAT
  # include-interface: # 限制被路由的接口。默认不限制，与 `exclude-interface` 冲突
  #   - "lan0"
  # exclude-interface: # 排除路由的接口，与 `include-interface` 冲突
  #   - "lan1"
  # include-uid: # UID 规则仅在 Linux 下被支持，并且需要 auto-route
  # - 0
  # include-uid-range: # 限制被路由的的用户范围
  # - 1000:9999
  # exclude-uid: # 排除路由的的用户
  #- 1000
  # exclude-uid-range: # 排除路由的的用户范围
  # - 1000:9999

  # Android 用户和应用规则仅在 Android 下被支持
  # 并且需要 auto-route

  # include-android-user: # 限制被路由的 Android 用户
  # - 0
  # - 10
  # include-package: # 限制被路由的 Android 应用包名
  # - com.android.chrome
  # exclude-package: # 排除被路由的 Android 应用包名
  # - com.android.captiveportallogin

# 嗅探域名 可选配置
sniffer:
  enable: true
  ## 对 redir-host 类型识别的流量进行强制嗅探
  ## 如：Tun、Redir 和 TProxy 并 DNS 为 redir-host 皆属于
  force-dns-mapping: true
  ## 对所有未获取到域名的流量进行强制嗅探
  parse-pure-ip: true
  # 是否使用嗅探结果作为实际访问，默认 true
  # 全局配置，优先级低于 sniffer.sniff 实际配置
  override-destination: true
  sniff: # TLS 和 QUIC 默认如果不配置 ports 默认嗅探 443
    QUIC:
      ports: [443, 8443]
    TLS:
      ports: [443, 8443]

    # 默认嗅探 80
    HTTP: # 需要嗅探的端口
      ports: [80, 8080-8880]
      # 可覆盖 sniffer.override-destination
      override-destination: true
  force-domain:
    - +.v2ex.com
  # skip-src-address: # 对于来源ip跳过嗅探
  #   - 192.168.0.3/32
  # skip-dst-address: # 对于目标ip跳过嗅探
  #   - 192.168.0.3/32
  ## 对嗅探结果进行跳过
  # skip-domain:
  #   - Mijia Cloud

# DNS 配置
dns:
  cache-algorithm: arc
  enable: true # 关闭将使用系统 DNS
  prefer-h3: false # 是否开启 DoH 支持 HTTP/3，将并发尝试
  listen: 0.0.0.0:1053 # 开启 DNS 服务器监听
  # ipv6: false # false 将返回 AAAA 的空结果
  # ipv6-timeout: 300 # 单位：ms，内部双栈并发时，向上游查询 AAAA 时，等待 AAAA 的时间，默认 100ms
  # 用于解析 nameserver，fallback 以及其他 DNS 服务器配置的，DNS 服务域名
  # 只能使用纯 IP 地址，可使用加密 DNS
  default-nameserver:
    - 223.6.6.6
    - 119.29.29.29
  enhanced-mode: fake-ip # or redir-host

  fake-ip-range: 198.18.0.1/16 # fake-ip 池设置

  # 配置不使用 fake-ip 的域名
  fake-ip-filter:
    - "*.126.net"
    - "*.ffxiv.com"
    - "*.finalfantasyxiv.com"
    - "*.home.arpa"
    - "*.invalid"
    - "*.kuwo.cn"
    - "*.lan"
    - "*.linksys.com"
    - "*.linksyssmartwifi.com"
    - "*.local"
    - "*.localhost"
    - "*.mcdn.bilivideo.cn"
    - "*.msftconnecttest.com"
    - "*.msftncsi.com"
    - "*.music.163.com"
    - "*.music.migu.cn"
    - "*.ntp.org.cn"
    - "*.router.asus.com"
    - "*.square-enix.com"
    - "+.battlenet.com.cn"
    - "+.nflxvideo.net"
    - "+.pool.ntp.org"
    - "+.srv.nintendo.net"
    - "+.stun.*.*"
    - "+.stun.*.*.*"
    - "+.stun.*.*.*.*"
    - "+.wargaming.net"
    - "+.wggames.cn"
    - "+.wotgame.cn"
    - "+.wowsgame.cn"
    - "amobile.music.tc.qq.com"
    - "aqqmusic.tc.qq.com"
    - "dl.stream.qqmusic.qq.com"
    - "heartbeat.belkin.com"
    - "isure.stream.qqmusic.qq.com"
    - "lens.l.google.com"
    - "localhost.ptlogin2.qq.com"
    - "localhost.sec.qq.com"
    - "mesu.apple.com"
    - "mobileoc.music.tc.qq.com"
    - "msftconnecttest.com"
    - "msftncsi.com"
    - "ntp.*.*"
    - "ntp1.*.*"
    - "ntp2.*.*"
    - "ntp3.*.*"
    - "ntp4.*.*"
    - "ntp5.*.*"
    - "ntp6.*.*"
    - "ntp7.*.*"
    - "proxy.golang.org"
    - "streamoc.music.tc.qq.com"
    - "stun.*.*"
    - "stun.*.*.*"
    - "stun.l.google.com"
    - "swcdn.apple.com"
    - "swdist.apple.com"
    - "swdownload.apple.com"
    - "swquery.apple.com"
    - "swscan.apple.com"
    - "time.*.*"
    - "time.*.*.*"
    - "time.*.edu.cn"
    - "time.*.gov"
    - "time1.*.*"
    - "time2.*.*"
    - "time3.*.*"
    - "time4.*.*"
    - "time5.*.*"
    - "time6.*.*"
    - "time7.*.*"
    - "time8.*.*"
    - "time9.*.*"
    - "xbox.*.microsoft.com"
    - "xnotify.xboxlive.com"
    # fakeip-filter 为 rule-providers 中的名为 fakeip-filter 规则订阅，
    # 且 behavior 必须为 domain/classical，当为 classical 时仅会生效域名类规则
    # - rule-set:fakeip-filter
    # fakeip-filter 为 geosite 中名为 fakeip-filter 的分类（需要自行保证该分类存在）
    # - geosite:fakeip-filter
  # 配置fake-ip-filter的匹配模式，默认为blacklist，即如果匹配成功不返回fake-ip
  # 可设置为whitelist，即只有匹配成功才返回fake-ip
  fake-ip-filter-mode: blacklist

  # use-hosts: true # 查询 hosts

  # 配置后面的nameserver、fallback和nameserver-policy向dns服务器的连接过程是否遵守遵守rules规则
  # 如果为false（默认值）则这三部分的dns服务器在未特别指定的情况下会直连
  # 如果为true，将会按照rules的规则匹配链接方式（走代理或直连），如果有特别指定则任然以指定值为准
  # 仅当proxy-server-nameserver非空时可以开启此选项, 强烈不建议和prefer-h3一起使用
  # 此外，这三者配置中的dns服务器如果出现域名会采用default-nameserver配置项解析，也请确保正确配置default-nameserver
  respect-rules: false

  # DNS 主要域名配置
  # 支持 UDP，TCP，DoT，DoH，DoQ
  # 这部分为主要 DNS 配置，影响所有直连，确保使用对大陆解析精准的 DNS
  nameserver:
    - 223.6.6.6
    - 119.29.29.29
    - tls://dns.pub:853 # DNS over TLS
    - tls://dns.alidns.com:853 # DNS over TLS
    - quic://223.6.6.6 # DNS over QUIC
    # - '8.8.8.8#RULES' # 效果同respect-rules，但仅对该服务器生效
    # - '8.8.8.8#en0' # 兼容指定 DNS 出口网卡

  # 当配置 fallback 时，会查询 nameserver 中返回的 IP 是否为 CN，非必要配置
  # 当不是 CN，则使用 fallback 中的 DNS 查询结果
  # 确保配置 fallback 时能够正常查询
  # fallback:
  #   - tcp://1.1.1.1
  #   - 'tcp://1.1.1.1#ProxyGroupName' # 指定 DNS 过代理查询，ProxyGroupName 为策略组名或节点名，过代理配置优先于配置出口网卡，当找不到策略组或节点名则设置为出口网卡

  # 专用于节点域名解析的 DNS 服务器，非必要配置项，如果不填则遵循nameserver-policy、nameserver和fallback的配置
  # proxy-server-nameserver:
  #   - https://dns.google/dns-query
  #   - tls://one.one.one.one

  # 专用于direct出口域名解析的 DNS 服务器，非必要配置项，如果不填则遵循nameserver-policy、nameserver和fallback的配置
  # direct-nameserver:
  #   - system://
  # direct-nameserver-follow-policy: false # 是否遵循nameserver-policy，默认为不遵守，仅当direct-nameserver不为空时生效

  # 配置 fallback 使用条件
  # fallback-filter:
  #   geoip: true # 配置是否使用 geoip
  #   geoip-code: CN # 当 nameserver 域名的 IP 查询 geoip 库为 CN 时，不使用 fallback 中的 DNS 查询结果
  #   配置强制 fallback，优先于 IP 判断，具体分类自行查看 geosite 库
  #   geosite:
  #     - gfw
  #   如果不匹配 ipcidr 则使用 nameservers 中的结果
  #   ipcidr:
  #     - 240.0.0.0/4
  #   domain:
  #     - '+.google.com'
  #     - '+.facebook.com'
  #     - '+.youtube.com'

  # 配置查询域名使用的 DNS 服务器
  # nameserver-policy:
  #   #   'www.baidu.com': '114.114.114.114'
  #   #   '+.internal.crop.com': '10.0.0.1'
  #   "geosite:cn,private,apple":
  #     - https://doh.pub/dns-query
  #     - https://dns.alidns.com/dns-query
  #   "geosite:category-ads-all": rcode://success
  #   "www.baidu.com,+.google.cn": [223.5.5.5, https://dns.alidns.com/dns-query]
  #   ## global，dns 为 rule-providers 中的名为 global 和 dns 规则订阅，
  #   ## 且 behavior 必须为 domain/classical，当为 classical 时仅会生效域名类规则
  #   # "rule-set:global,dns": 8.8.8.8

proxies: null

proxy-groups:
  # 代理节点选择
  - name: "𝐏𝐫𝐨𝐱𝐲"
    type: select
    proxies:
      - 𝐀𝐮𝐭𝐨𝐭𝐞𝐬𝐭
      - 𝐅𝐚𝐥𝐥𝐛𝐚𝐜𝐤
    use:
      - ProxyList
  # 国际流媒体服务
  - name: "𝐒𝐭𝐫𝐞𝐚𝐦𝐢𝐧𝐠"
    type: select
    proxies:
      - 𝐏𝐫𝐨𝐱𝐲
    use:
      - ProxyList
  # 中国流媒体服务（面向海外版本）
  # 用于观看部分国内流媒体面向港澳台的地区的限定内容，此处应放港澳台节点，如果没有此需求可删除此处策略组及相关规则
  - name: "𝐒𝐭𝐫𝐞𝐚𝐦𝐢𝐧𝐠𝐒𝐄"
    type: select
    proxies:
      - DIRECT
    filter: "(?i)(h(ong)?k(ong)?|ta?i?w|macau)|澳门|港|台|🇭🇰|🇲🇴|🇹🇼"
    use:
      - ProxyList
  # Telegram 即时通讯
  - name: "𝐓𝐞𝐥𝐞𝐠𝐫𝐚𝐦"
    type: select
    proxies:
      - 𝐏𝐫𝐨𝐱𝐲
      # - 2
    filter: "(?i)(sg|us|nl|singapore|united|netherland)|新加坡|荷兰|美国|狮城|🇸🇬|🇳🇱|🇺🇸"
    use:
      - ProxyList
  - name: "𝐀𝐈"
    type: select
    proxies:
      - 𝐏𝐫𝐨𝐱𝐲
    filter: "(?i)(jp|japan|u[sk]|america|united|ta?i?w)|[美英]国|日本|台|🇺🇸|🇬🇧|🇯🇵|🇹🇼"
    use:
      - ProxyList
  # Apple 服务
  - name: "𝐀𝐩𝐩𝐥𝐞"
    type: select
    proxies:
      - DIRECT
      - 𝐏𝐫𝐨𝐱𝐲
  # OneDrive 网盘服务
  - name: "𝐎𝐧𝐞𝐃𝐫𝐢𝐯𝐞"
    type: select
    proxies:
      - DIRECT
      - 𝐏𝐫𝐨𝐱𝐲
  # 去广告
  - name: "𝐆𝐮𝐚𝐫𝐝"
    type: select
    proxies:
      - REJECT
      - DIRECT

  # 白名单模式 PROXY, 黑名单模式 DIRECT, 不知道的话别动
  - name: "𝐅𝐢𝐧𝐚𝐥"
    type: select
    proxies:
      - 𝐏𝐫𝐨𝐱𝐲
      - DIRECT

  - name: "𝐀𝐮𝐭𝐨𝐭𝐞𝐬𝐭"
    type: url-test
    lazy: true
    use:
      - ProxyList
    url: "http://cp.cloudflare.com/generate_204"
    interval: 300

  - name: "𝐅𝐚𝐥𝐥𝐛𝐚𝐜𝐤"
    type: fallback
    lazy: true
    use:
      - ProxyList
    url: "http://cp.cloudflare.com/generate_204"
    interval: 300

proxy-providers:
  ProxyList:
    url: https://example.com/nodelist
    path: ./Proxy/List.yaml
    type: http
    interval: 86400
    health-check:
      enable: true
      interval: 1800
      url: http://cp.cloudflare.com/generate_204

# 配置锚点（后续好改（
classical: &classical
  type: http
  format: text
  behavior: classical
  interval: 86400
domain: &domain
  type: http
  format: text
  behavior: domain
  interval: 86400

rule-providers:
  Unbreak:
    <<: *classical
    url: https://ruleset.isteed.cc/List/Unbreak.conf
    path: ./RuleSet/Unbreak.conf
  Apple:
    <<: *classical
    url: https://ruleset.isteed.cc/List/Apple.conf
    path: ./RuleSet/Apple.conf
  AppleCDN:
    <<: *domain
    url: https://ruleset.isteed.cc/List/ChinaApple.conf
    path: ./RuleSet/AppleCDN.conf
  Streaming:
    <<: *classical
    url: https://ruleset.isteed.cc/List/Streaming.conf
    path: ./RuleSet/Streaming.conf
  StreamingSE:
    <<: *classical
    url: https://ruleset.isteed.cc/List/StreamingSE.conf
    path: ./RuleSet/StreamingSE.conf
  Global:
    <<: *classical
    url: https://ruleset.isteed.cc/List/Global.conf
    path: ./RuleSet/Global.conf
  Guard:
    <<: *domain
    url: https://ruleset.isteed.cc/List/Guard.conf
    path: ./RuleSet/Guard.conf
  AI:
    <<: *classical
    url: https://ruleset.isteed.cc/List/AI.conf
    path: ./RuleSet/AI.conf
  China:
    <<: *classical
    url: https://ruleset.isteed.cc/List/China.conf
    path: ./RuleSet/China.conf
  # ChinaIP:
  #   <<: *classical
  #   url: https://ruleset.isteed.cc/List/ChinaIP.conf
  #   path: ./RuleSet/ChinaIP.conf
  Telegram:
    <<: *classical
    url: https://ruleset.isteed.cc/List/Telegram.conf
    path: ./RuleSet/Telegram.conf
  OneDrive:
    <<: *classical
    url: https://ruleset.isteed.cc/List/OneDrive.conf
    path: ./RuleSet/OneDrive.conf
  DirectCustom:
    <<: *classical
    url: https://ruleset.isteed.cc/List/DirectCustom.conf
    path: ./RuleSet/DirectCustom.conf
  ProxyCustom:
    <<: *classical
    url: https://ruleset.isteed.cc/List/ProxyCustom.conf
    path: ./RuleSet/ProxyCustom.conf

rules:
  # Custom
  - RULE-SET,DirectCustom,DIRECT
  - RULE-SET,ProxyCustom,𝐏𝐫𝐨𝐱𝐲
  # Guard
  - RULE-SET,Guard,𝐆𝐮𝐚𝐫𝐝
  # Unbreak
  - RULE-SET,Unbreak,DIRECT
  # Apple
  - RULE-SET,Apple,𝐀𝐩𝐩𝐥𝐞
  # Apple CDN
  - RULE-SET,AppleCDN,DIRECT
  # Chat AI
  - RULE-SET,AI,𝐀𝐈
  # Telegram
  - RULE-SET,Telegram,𝐓𝐞𝐥𝐞𝐠𝐫𝐚𝐦
  # OneDrive
  - RULE-SET,OneDrive,𝐎𝐧𝐞𝐃𝐫𝐢𝐯𝐞
  # (Streaming Media)
  - RULE-SET,Streaming,𝐒𝐭𝐫𝐞𝐚𝐦𝐢𝐧𝐠
  # (StreamingSE)
  - RULE-SET,StreamingSE,𝐒𝐭𝐫𝐞𝐚𝐦𝐢𝐧𝐠𝐒𝐄
  # (DNS Cache Pollution) / (IP Blackhole) / (Region-Restricted Access Denied) / (Network Jitter)
  - RULE-SET,Global,𝐏𝐫𝐨𝐱𝐲
  # China Area Network
  - RULE-SET,China,DIRECT
  # Local Area Network
  - IP-CIDR,192.168.0.0/16,DIRECT
  - IP-CIDR,10.0.0.0/8,DIRECT
  - IP-CIDR,172.16.0.0/12,DIRECT
  - IP-CIDR,127.0.0.0/8,DIRECT
  - IP-CIDR,100.64.0.0/10,DIRECT
  - IP-CIDR,224.0.0.0/4,DIRECT
  - IP-CIDR,fe80::/10,DIRECT
  # （可选）使用来自 ipipdotnet 的 ChinaIP 以解决数据不准确的问题，使用 ChinaIP.yaml 时可禁用下列直至（包括）「GEOIP,CN」规则
  # - RULE-SET,ChinaIP,DIRECT
  # GeoIP China
  - GEOIP,CN,DIRECT
  - MATCH,𝐅𝐢𝐧𝐚𝐥
